// Buildscript is evaluated before everything else so we can't use getExtOrDefault
def gradle_version = rootProject.ext.has('gradleVersion') ? rootProject.ext.get('gradleVersion') : project.properties['RNNaverLogin_gradleVersion']

buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    dependencies {
      classpath "com.android.tools.build:gradle:$gradle_version"
    }
    
}

apply plugin: 'com.android.library'

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['RNKakaoLogins_' + name]
}

android {
    compileSdkVersion getExtOrDefault('compileSdkVersion')
    defaultConfig {
        minSdkVersion getExtOrDefault('minSdkVersion')
        targetSdkVersion getExtOrDefault('targetSdkVersion')
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    lintOptions {
        disable 'GradleCompatible'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    mavenLocal()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url("$rootDir/../node_modules/react-native/android")
    }
    google()
    mavenCentral()
    jcenter()
}

def naver_oauth_version = getExtOrDefault('naverOAuthVersion')

dependencies {
    //noinspection GradleDynamicVersion
    implementation "com.facebook.react:react-native:+"  // From node_modules
    implementation "com.navercorp.nid:oauth:$naver_oauth_version"
}